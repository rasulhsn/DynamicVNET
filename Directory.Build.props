<Project>
  <PropertyGroup>

    <NeutralLanguage>en</NeutralLanguage>
    <GenerateAssemblyInformationalVersionAttribute>false</GenerateAssemblyInformationalVersionAttribute>
    <GenerateAssemblyVersionAttribute>false</GenerateAssemblyVersionAttribute>
    <PackageOutputPath>$(MSBuildProjectDirectory)/../../.build/packages</PackageOutputPath>
	<PackageId>DynamicVNET</PackageId>
	<Version>1.4.0</Version>
	<VersionPrefix>1.4.0</VersionPrefix>
	<Author>Rasul Huseynov</Author>
    <Description>
		  DynamicVNET is a .NET Standard library that was created to develop dynamic reuse validation. The main idea of the library is to apply validation rules using a declarative approach. And the rules can be used on POCO and BlackBox libraries. Also, it has rich facilities and features as Fluent API at runtime.
	</Description>
	<Company>DynamicVNET.Lib</Company>
	<Copyright>Copyright (c) 2018-2024 Rasul Huseynov</Copyright>
	<License>https://github.com/rasulhsn/DynamicVNET/blob/master/LICENSE</License>
	<PackageProjectUrl>https://github.com/rasulhsn/DynamicVNET</PackageProjectUrl>
	<RepositoryUrl>https://github.com/rasulhsn/DynamicVNET</RepositoryUrl>
	<PackageTags>POCOValidation DataAnnotation Validator BindingDynamicValidation DynamicValidator FluentValidation</PackageTags>
	<GeneratePackageOnBuild>True</GeneratePackageOnBuild>
	<PackageIcon>DynamicVNET Icon.png</PackageIcon>
	<PackageLicense>https://github.com/rasulhsn/DynamicVNET/blob/master/LICENSE</PackageLicense>
    <DocumentationUrl>https://github.com/rasulhsn/DynamicVNET/blob/master/README.md</DocumentationUrl>
	  <readMeMdUrl>
		https://github.com/rasulhsn/DynamicVNET/blob/master/README.md
	 </readMeMdUrl>
  </PropertyGroup>
</Project>
